version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: sms-man-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: sms-man-clone
    volumes:
      - mongodb_data:/data/db
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - sms-man-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sms-man-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/sms-man-clone?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRE: 7d
      REFRESH_TOKEN_SECRET: your-refresh-token-secret-change-in-production
      PORT: 5000
      FRONTEND_URL: http://localhost:3000
      API_BASE_URL: http://localhost:5000/api
    depends_on:
      - mongodb
    networks:
      - sms-man-network
    volumes:
      - ./backend:/app
      - /app/node_modules

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: sms-man-frontend
    restart: unless-stopped
    ports:
      - "3002:3000"
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
    depends_on:
      - backend
    networks:
      - sms-man-network
    volumes:
      - ./frontend:/app
      - /app/node_modules

  # Redis (for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: sms-man-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sms-man-network

  # Nginx (Reverse Proxy)
  nginx:
    image: nginx:alpine
    container_name: sms-man-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - sms-man-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  sms-man-network:
    driver: bridge
